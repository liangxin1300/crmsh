show Basic configure
node node1
delete node1
node node1 \
	attributes mem=16G
node node2 utilization cpu=4
primitive st stonith:ssh \
	params hostlist='node1 node2' \
	meta target-role="Started" \
	op start timeout=60s \
	op monitor interval=60m timeout=60s
primitive st2 stonith:ssh \
	params hostlist='node1 node2'
primitive d1 ocf:pacemaker:Dummy \
	operations $id=d1-ops \
	op monitor interval=60m \
	op monitor interval=120m OCF_CHECK_LEVEL=10
monitor d1 60s:30s
primitive d2 ocf:heartbeat:Delay \
	params mondelay=60 \
	op start timeout=60s \
	op stop timeout=60s
monitor d2:Started 60s:30s
group g1 d1 d2
primitive d3 ocf:pacemaker:Dummy
clone c d3 \
	meta clone-max=1
primitive d4 ocf:pacemaker:Dummy
ms m d4
delete m
master m d4
primitive s5 ocf:pacemaker:Stateful \
	operations $id-ref=d1-ops
primitive s6 ocf:pacemaker:Stateful \
	operations $id-ref=d1
ms m5 s5
ms m6 s6
primitive d7 Dummy \
        params fake=1 extra rule score=inf \
        expression attribute=#uname operation=eq value=node1 \
        params fake=2 extra rule score=inf \
        expression attribute=#uname operation=eq value=node2 \
	op start interval=0 timeout=60s \
        extra score=2 op_param=dummy \
        rule expression attribute=#uname operation=eq value=node1 \
        extra score=1 op_param=smart \
        extra op_type=meta score=2 start-delay=120m \
        rule expression attribute=#ra-version operation=gt value=1.0 type=version \
        extra op_type=meta score=1 start-delay=60m
location l1 g1 on node1 score=100
location l2 c \
        rule $id=l2-rule1 score=100 expression attribute=#uname operation=eq value=node1
location l3 m5 \
        rule score=inf boolean-op=and \
        expression attribute=#uname operation=eq value=node1 \
        expression attribute=pingd operation=gt value=0
location l4 m5 \
        rule score=-inf boolean-op=or \
        expression attribute=pingd operation=not_defined \
        expression attribute=pingd operation=lte value=0
location l5 m5 \
        rule score=-inf boolean-op=or \
        expression attribute=pingd operation=not_defined \
        expression attribute=pingd operation=lte value=0 \
        rule score=0 boolean-op=and \
        expression attribute=#uname operation=eq value=node1 \
        expression attribute=pingd operation=gt value=0
location l6 m5 \
	rule $id-ref=l2-rule1
location l7 m5 \
	rule $id-ref=l2
colocation c1 m6 with m5 options score=inf
colocation c2 m5 role=Master with d1 with_role=Started options score=inf
order o1 first m5 then m6 options kind=Mandatory
order o2 first d1 first-action=start then m5 then-action=promote options kind=Optional
order o3 first m5 then m6 options kind=Serialize
order o4 first m5 then m6
rsc_ticket ticket-A_m6 ticket-A: m6
rsc_ticket ticket-B_m6_m5 ticket-B: m6 m5 loss-policy=fence
rsc_ticket ticket-C_master ticket-C: m6 m5:Master loss-policy=fence
fencing_topology st st2
property stonith-enabled=true
property $id=cpset2 maintenance-mode=true
rsc_defaults failure-timeout=10m
op_defaults $id=opsdef2 record-pending=true \
        rule score=100 expression attribute=#uname operation=eq value=node1
tag t1: m5 m6
set d2.mondelay 45
_test
verify
.
