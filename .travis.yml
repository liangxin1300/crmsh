---
sudo: required
language: python
services:
  - docker

stages:
  - test test_bootstrap
  - delivery
  - submit  
env:
  global:
    - CC_TEST_REPORTER_ID=a2579335b631ec35473874d7bb4fe983025c0287cea89c9dc34c35f98ee3963d
    - Tumbleweed_image='liangxin1300/hatbw'
      HA_packages='pacemaker corosync corosync-qdevice csync2 python3 python3-lxml python3-python-dateutil python3-parallax libglue-devel python3-setuptools python3-tox asciidoc autoconf automake make pkgconfig which libxslt-tools mailx procps python3-nose python3-PyYAML python3-curses tar python3-behave iproute2 iputils vim bzip2'

jobs:
  include:
    - stage: test
      before_script:
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build

      before_install:
        - docker pull krig/crmsh:latest

      script:
        - docker run -t -v "$(pwd):/app" krig/crmsh /bin/sh -c "systemctl start dbus; cd /app; ./test/run-in-travis.sh"

      after_failure:
        - sudo cat $TRAVIS_BUILD_DIR/crmtestout/regression.out $TRAVIS_BUILD_DIR/crmtestout/crm.*

      after_script:
        - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

    - stage: test_bootstrap
      before_install:
        - docker pull ${Tumbleweed_image}

        - docker run -d --name=hanode1 --hostname hanode1 --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v "$(pwd):/app" ${Tumbleweed_image}
        - docker exec -t hanode1 /bin/sh -c "zypper -n in ${HA_packages}"

      script:
        - docker exec -t hanode1 /bin/sh -c "cd /app; ./test/run-in-travis.sh bootstrap"

    - stage: delivery
      if: type != pull_request AND branch = master
      env:
        - FOLDER=/package
        - PACKAGE_NAME=crmsh

      before_install:
        - docker pull shap/continuous_deliver:latest 
      
      script:
        - |
          docker run -t -v "$(pwd):/package" \
          -e OBS_USER=$OBS_USER \
          -e OBS_PASS=$OBS_PASS \
          -e FOLDER=$FOLDER \
          -e OBS_PROJECT=$OBS_PROJECT \
          -e PACKAGE_NAME=$PACKAGE_NAME \
          shap/continuous_deliver \
          /bin/bash -c "cd /package;/scripts/upload.sh"

    - stage: submit
      if: type != pull_request AND branch = master
      env:
        - PACKAGE_NAME=crmsh

      before_install:
        - docker pull shap/continuous_deliver:latest

      script:
        - |
          docker run -t -v "$(pwd):/package" \
          -e OBS_USER=$OBS_USER \
          -e OBS_PASS=$OBS_PASS \
          -e OBS_PROJECT=$OBS_PROJECT \
          -e PACKAGE_NAME=$PACKAGE_NAME \
          -e TARGET_PROJECT=$TARGET_PROJECT \
          shap/continuous_deliver \
          /bin/bash -c "cd /package;/scripts/submit.sh"
